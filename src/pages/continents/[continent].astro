---
import { POSITION_NAME_MAP,QUERYSTRING_COUNTRY_NAME,QUERYSTRING_PLACE_TO_VISIT } from "@constants/worldMapConstants";
// import BtnSelectorCity from "src/components/BtnSelectorCity.astro";
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import MainLayout from "src/layouts/MainLayout.astro";
import NorthAmerica from "src/assets/json/NorthAmerica.json"
export async function getStaticPaths(){
    return Object.entries(POSITION_NAME_MAP).map(([key, {continentImg, abbr}],index, array)=>{
        const lastCity = array[index-1]?.[1].abbr;
        const nextCity = array[index+1]?.[1].abbr;
        return {
            params:{continent:abbr},
            props: {continentImg, continentName: key, lastCity, nextCity}
        }
    })
}
const {continentImg, continentName, lastCity, nextCity} = Astro.props;
const images = import.meta.glob<{default:ImageMetadata}>("/src/assets/images/continents/*.{jpeg,jpg,png,gif}")
const imgPath = `/src/assets/images/continents/${continentImg}.png`
if(!images[imgPath]) throw new Error(`${imgPath} does not exist :(`)
// const continentData = import(`/src/assets/json/${continentImg}.json`)
// console.log(continentData)
console.log("awapo", images[imgPath]())
console.log("NorthAmerica", NorthAmerica)
---
<MainLayout title={continentName}>
    <article class="main--body">
        <div class="secondary--block">
            <Image
                src={images[imgPath]()}
                alt="continent"
                class="main--img"
            />
        </div>
        <div class="secondary--block">
            <div class="header--bar">
                <div class="card--ctn">
                    <div class="card--header">
                        {lastCity ? (<a href={`/continents/${lastCity}/`} class="btn--change">
                            <span class="material-icons md-dark icon--style">arrow_back</span>
                        </a>):<span></span>}
                        <p class="secondary--title header--elem">{continentName}</p>
                        {nextCity ? (<a href={`/continents/${nextCity}/`} class="btn--change">
                            <span class="material-icons md-dark icon--style">arrow_forward</span>
                        </a>):<span></span>}
                    </div>
                    <div class="card--body">
                        <button
                            is="button-city"
                            data-country-key={QUERYSTRING_COUNTRY_NAME}
                            data-place-key={QUERYSTRING_PLACE_TO_VISIT}
                            data-continent-name={continentImg}
                            data-place-name="Caroline"
                        >
                            Hi{NorthAmerica.Carolina.name}
                        </button>
                        <!-- <a href=`/continents/place/?${QUERYSTRING_COUNTRY_NAME}=${continentImg}&${QUERYSTRING_COUNTRY_NAME}=Carolina`>HACIA UNA PAGINA</a> -->
                        <!-- {loremIpsum.map((test)=>{
                            console.log(test)
                            return <BtnSelectorCity />
                        })} -->
                    </div>
                </div>
            </div>
        </div>
    </article>
</MainLayout>
<script>
    interface IButtonExtra extends HTMLButtonElement {
        countryKey: string|undefined;
        placeKey: string|undefined;
        continentName: string|undefined;
        placeName: string|undefined;
}
    class ButtonExtra extends HTMLButtonElement implements IButtonExtra {
        countryKey: string | undefined;
        placeKey: string | undefined;
        continentName: string | undefined;
        placeName: string | undefined;
        constructor(){
            super()
            this.countryKey = this.dataset.countryKey
            this.placeKey = this.dataset.placeKey
            this.continentName = this.dataset.continentName
            this.placeName = this.dataset.placeName
            this.boundOnClick()
        }
        boundOnClick = () => {
            this.addEventListener("click",()=>{
                const timestamp = Date.now()
                const redirectionData =`/continents/place/?${this.countryKey}=${this.continentName}&${this.placeKey}=${this.placeName}&t=${timestamp}`
                window.location.href = redirectionData
            })
        }
    };
    customElements.define("button-city", ButtonExtra, {extends:"button"})

    async function fetchItems() {
    const response = await fetch('/assets/json/NorthAmerica.json');
    const items = await response.json();

    // Do something with the fetched items, e.g., update the DOM
    console.log(items);
}

// Call the function to fetch the data
    fetchItems();   
</script>
<style>
    .card--body {
        /* background-color: red; */
        height: 100%;
        margin-bottom: 10%;
    }
    .main--body {
        display: flex;
        height: 100vh;
        flex-direction: row;
    }
    .main--img {
        max-width: 100%;
        height: auto;
    }
    .secondary--block {
        justify-content: center;
        align-items: center;
        display: flex;
        flex-grow: 0;
        width: 100%;
    }
    .secondary--title {
        font-family: "Segoe UI Regular";
        text-transform: capitalize;
        font-size: 3rem;
    }
    .header--bar {
        display: flex;
        width: 80%;
        height: 100%;
        align-items: flex-end;
    }
    .card--header{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
    }
    .card--ctn {
        display: flex;
        flex-direction: column;
        align-content:flex-end;
        height: 80%;
        width: 100%;
    }
    .icon--style {
        font-size: 5rem;
    }
    .btn--change:visited {
        text-decoration: none;
        color:white
    }
    .header--elem {
        /* padding: 0;
        margin: 0; */

    }
    @media screen and (max-width:1000px){
        .main--body{
            flex-direction: column;
        }
        .secondary--title {
            font-size: 2rem;
        }
    }
</style>